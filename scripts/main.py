# !/usr/bin/env python
import os
import uuid
import telebot
import speech_recognition as sr
from pydub import AudioSegment

from dotenv import load_dotenv

load_dotenv()
TOKEN = os.environ.get('APP_TOKEN')
bot = telebot.TeleBot(TOKEN)

@bot.message_handler(content_types=['audio', 'voice'])
def handle_voice(message):

    out = '–°–æ—Ä—Ä–∏, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...'
    unique_name = uuid.uuid4()
    wav_file = f'{unique_name}.wav'
    ogg_file = f'{unique_name}.ogg'

    if message.content_type == 'audio':
        file_info = bot.get_file(message.audio.file_id)
    else:
        file_info = bot.get_file(message.voice.file_id)

    downloaded_file = bot.download_file(file_info.file_path)
    with open(ogg_file, 'wb') as new_file:
        new_file.write(downloaded_file)

    # transpile
    sound = AudioSegment.from_ogg(ogg_file)
    sound.export(wav_file, format='wav')
    #
    r = sr.Recognizer()
    with sr.AudioFile(wav_file) as source:
        audio = r.record(source)
        out = r.recognize_google(audio, language='ru-RU')

    # clean
    if os.path.exists(wav_file):
        os.remove(wav_file)

    if os.path.exists(ogg_file):
        os.remove(ogg_file)

    bot.reply_to(message, out)


@bot.message_handler(
    content_types=[content_type for content_type in ['text', 'document', 'sticker', 'photo', 'video'] if
                   content_type not in ['audio', 'voice']])
def handle_data(message):
    if message.text.startswith('/help'):
        out = '–ü—Ä–∏–≤–µ—Ç üëã. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —á—Ç–æ –ö–∏—Ä–∏–ª–ª –∏ –ú–µ—Ñ–æ–¥–∏–π —Å–æ–∑–¥–∞–ª–∏ –ø–∏—Å—å–º–µ–Ω–Ω–æ—Å—Ç—å –≤ –Ω–∞—á–∞–ª–µ 860-—Ö –≥–æ–¥–æ–≤\n'
        out += '–∫—Ç–æ-—Ç–æ –µ—â–µ üò† –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –≤ —á–∞—Ç–∞—Ö. –ú–æ—è –º–∏—Å—Å–∏—è - –ø–æ–º–æ—á—å —Ç–µ–±–µ –≤ —Ä–∞—Å–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ç–∞–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.\n'
        out += '–ü—Ä–æ—Å—Ç–æ –ø–æ–¥–µ–ª–∏—Å—å —Å–æ –º–Ω–æ–π –∞—É–¥–∏–æ—Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ —Ç—ã –ø–æ–ª—É—á–∏—à—å –≤ –æ—Ç–≤–µ—Ç —Ç–µ–∫—Å—Ç.'
    else:
        out = '‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è. –Ø –º–æ–≥—É –ø—Ä–∏–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.'

    bot.reply_to(message, out)


bot.polling()
